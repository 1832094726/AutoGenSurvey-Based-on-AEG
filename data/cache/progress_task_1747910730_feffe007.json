{
  "task_id": "task_1747910730_feffe007",
  "entities": [
    {
      "algorithm_entity": {
        "algorithm_id": "ExpressionTree_2015",
        "entity_type": "Algorithm",
        "name": "ExpressionTree",
        "year": 2015,
        "authors": [
          "Roy et al."
        ],
        "task": "Arithmetic Word Problem Solving",
        "dataset": [
          "AI2",
          "IL",
          "CC",
          "SingleEQ",
          "AllArith"
        ],
        "metrics": [
          "Accuracy"
        ],
        "architecture": {
          "components": [
            "Binary Classifier",
            "Beam Search"
          ],
          "connections": [
            "Bottom-up Tree Construction"
          ],
          "mechanisms": [
            "Global Scoring Function"
          ]
        },
        "methodology": {
          "training_strategy": [
            "Binary Classification for Quantity Relevance"
          ],
          "parameter_tuning": [
            "Beam Search with k=200"
          ]
        },
        "feature_processing": [
          "Feature Selection"
        ]
      }
    },
    {
      "algorithm_entity": {
        "algorithm_id": "ALGES_2015",
        "entity_type": "Algorithm",
        "name": "ALGES",
        "year": 2015,
        "authors": [
          "Roy et al."
        ],
        "task": "Arithmetic Word Problem Solving",
        "dataset": [
          "AI2",
          "IL",
          "CC"
        ],
        "metrics": [
          "Accuracy"
        ],
        "architecture": {
          "components": [
            "Equation Tree Enumeration",
            "Integer Linear Programming (ILP)"
          ],
          "connections": [
            "Brute-force Tree Enumeration"
          ],
          "mechanisms": [
            "Scoring Function without Quantity Relevance"
          ]
        },
        "methodology": {
          "training_strategy": [
            "No Quantity Relevance Classifier"
          ],
          "parameter_tuning": []
        },
        "feature_processing": []
      }
    },
    {
      "algorithm_entity": {
        "algorithm_id": "UNITDEP_2017",
        "entity_type": "Algorithm",
        "name": "UNITDEP",
        "year": 2017,
        "authors": [
          "Same authors as ExpressionTree"
        ],
        "task": "Arithmetic Word Problem Solving",
        "dataset": [
          "AI2",
          "IL",
          "CC",
          "SingleEQ",
          "AllArith"
        ],
        "metrics": [
          "Accuracy"
        ],
        "architecture": {
          "components": [
            "Unit Dependency Graph (UDG)",
            "Rate Consistency Rules"
          ],
          "connections": [
            "Graph-based Constraints"
          ],
          "mechanisms": [
            "Enhanced Scoring Function"
          ]
        },
        "methodology": {
          "training_strategy": [
            "Two Classifiers for Nodes and Edges"
          ],
          "parameter_tuning": []
        },
        "feature_processing": [
          "Customized Feature Selection"
        ]
      }
    },
    {
      "algorithm_entity": {
        "algorithm_id": "MathDQN_2018",
        "entity_type": "Algorithm",
        "name": "MathDQN",
        "year": 2018,
        "authors": [
          "Wang et al."
        ],
        "task": "Arithmetic Word Problem Solving",
        "dataset": [
          "AI2",
          "IL",
          "CC",
          "SingleEQ",
          "AllArith",
          "Dolphin-S",
          "MAWPS-S"
        ],
        "metrics": [
          "Accuracy"
        ],
        "architecture": {
          "components": [
            "Deep Q-Network (DQN)",
            "Markov Decision Process (MDP)"
          ],
          "connections": [
            "Reinforcement Learning Framework"
          ],
          "mechanisms": [
            "Operator Selection via Beam Search"
          ]
        },
        "methodology": {
          "training_strategy": [
            "Reward Feedback from Environment"
          ],
          "parameter_tuning": [
            "Two-layer Feed-forward Neural Network"
          ]
        },
        "feature_processing": []
      }
    },
    {
      "algorithm_entity": {
        "algorithm_id": "Seq2SeqET_2018",
        "entity_type": "Algorithm",
        "name": "Seq2SeqET",
        "year": 2018,
        "authors": [
          "Authors not explicitly mentioned"
        ],
        "task": "Arithmetic Word Problem Solving",
        "dataset": [
          "SingleEQ",
          "AllArith"
        ],
        "metrics": [
          "Accuracy"
        ],
        "architecture": {
          "components": [
            "Seq2Seq Model",
            "Expression Tree Output"
          ],
          "connections": [
            "Template Space Reduction via Equation Normalization"
          ],
          "mechanisms": []
        },
        "methodology": {
          "training_strategy": [],
          "parameter_tuning": []
        },
        "feature_processing": []
      }
    },
    {
      "algorithm_entity": {
        "algorithm_id": "T-RNN_2019",
        "entity_type": "Algorithm",
        "name": "T-RNN",
        "year": 2019,
        "authors": [
          "Authors not explicitly mentioned"
        ],
        "task": "Arithmetic Word Problem Solving",
        "dataset": [
          "Dolphin-S",
          "Math23K"
        ],
        "metrics": [
          "Accuracy"
        ],
        "architecture": {
          "components": [
            "Bi-LSTM with Self-Attention",
            "Recursive Neural Network"
          ],
          "connections": [
            "Quantity Encoding, Template Representation"
          ],
          "mechanisms": [
            "Unified Template Space"
          ]
        },
        "methodology": {
          "training_strategy": [],
          "parameter_tuning": []
        },
        "feature_processing": []
      }
    },
    {
      "dataset_entity": {
        "dataset_id": "AI2_2014",
        "entity_type": "Dataset",
        "name": "AI2",
        "year": 2014,
        "domain": "Arithmetic Word Problems",
        "size": "395 problems",
        "characteristics": [
          "Single-step and Multi-step",
          "Addition and Subtraction Only"
        ]
      }
    },
    {
      "dataset_entity": {
        "dataset_id": "IL_2015",
        "entity_type": "Dataset",
        "name": "IL",
        "year": 2015,
        "domain": "Arithmetic Word Problems",
        "size": "562 problems",
        "characteristics": [
          "Single-step",
          "Addition, Subtraction, Multiplication, Division"
        ]
      }
    },
    {
      "dataset_entity": {
        "dataset_id": "CC_2015",
        "entity_type": "Dataset",
        "name": "CC",
        "year": 2015,
        "domain": "Arithmetic Word Problems",
        "size": "600 problems",
        "characteristics": [
          "Multi-step",
          "Addition, Subtraction, Multiplication, Division"
        ]
      }
    },
    {
      "dataset_entity": {
        "dataset_id": "SingleEQ_2015",
        "entity_type": "Dataset",
        "name": "SingleEQ",
        "year": 2015,
        "domain": "Arithmetic Word Problems",
        "size": "508 problems",
        "characteristics": [
          "Single-step and Multi-step",
          "Addition, Subtraction, Multiplication, Division"
        ]
      }
    },
    {
      "dataset_entity": {
        "dataset_id": "AllArith_2017",
        "entity_type": "Dataset",
        "name": "AllArith",
        "year": 2017,
        "domain": "Arithmetic Word Problems",
        "size": "831 problems",
        "characteristics": [
          "Near-duplicate Problems Removed"
        ]
      }
    },
    {
      "dataset_entity": {
        "dataset_id": "Dolphin18K_2018",
        "entity_type": "Dataset",
        "name": "Dolphin18K",
        "year": 2018,
        "domain": "Arithmetic Word Problems",
        "size": "18,460 problems",
        "characteristics": [
          "Large-scale",
          "Multiple Equations"
        ]
      }
    },
    {
      "metric_entity": {
        "metric_id": "Accuracy_2014",
        "entity_type": "Metric",
        "name": "Accuracy",
        "description": "Proportion of Correctly Solved Problems",
        "formula": "Correct Predictions / Total Predictions",
        "value_range": "[0, 1]",
        "interpretation": "Higher values indicate better performance"
      }
    }
  ],
  "processed_files": [
    "The Gap of Semantic Parsing A Survey on Automatic(2019).pdf"
  ],
  "progress": 1.0,
  "timestamp": "2025-05-22T18:52:48.220093",
  "relations": [
    {
      "from_entity": "MathDQN",
      "to_entity": "ExpressionTree",
      "relation_type": "Improve",
      "structure": "Methodology.Training",
      "detail": "MathDQN改进了ExpressionTree，通过深度强化学习框架提高了求解算术问题的能力。",
      "evidence": "MathDQN models the tree construction as Markov Decision Process and leverage the strengths of deep Q-network (DQN). By using a two-layer feed-forward neural network as the deep Q-network to approximate the Q-value function, the framework learns model parameters from the reward feedback of the environment.",
      "confidence": 0.95,
      "from_entity_type": "Algorithm",
      "to_entity_type": "Algorithm",
      "extraction_complete": true
    },
    {
      "from_entity": "DNS",
      "to_entity": "ARIS",
      "relation_type": "Replace",
      "structure": "Architecture.Component",
      "detail": "DNS取代了ARIS的手工特征工程，采用深度学习模型自动提取特征。",
      "evidence": "Deep Neural Solver(DNS) is the first deep learning based algorithm that does not rely on hand-crafted features.",
      "confidence": 0.95,
      "from_entity_type": "Algorithm",
      "to_entity_type": "Algorithm",
      "extraction_complete": true
    },
    {
      "from_entity": "CASS",
      "to_entity": "DNS",
      "relation_type": "Extend",
      "structure": "Architecture.Component",
      "detail": "CASS在DNS的基础上增加了复制和对齐机制，并采用了强化学习技术。",
      "evidence": "CASS is an extension of seq2seq model. It adjusts the output sequence generation process by incorporating the copy and alignment mechanism. Reinforcement learning(RL) technique is adopted.",
      "confidence": 0.95,
      "from_entity_type": "Algorithm",
      "to_entity_type": "Algorithm",
      "extraction_complete": true
    },
    {
      "from_entity": "ALGES",
      "to_entity": "ExpressionTree",
      "relation_type": "Optimize",
      "structure": "Evaluation.Dataset",
      "detail": "ALGES在表达树构造上进行了优化，通过整数线性规划减少了搜索空间。",
      "evidence": "ALGES does not discard irrevalent quantities, but enumerates all the syntactically valid trees. Integer Linear Programming(ILP) is applied as it can help enforce the constraints such as syntactic validity, type consistence and domain specific simplicity considerations.",
      "confidence": 0.95,
      "from_entity_type": "Algorithm",
      "to_entity_type": "Algorithm",
      "extraction_complete": true
    },
    {
      "from_entity": "T-RNN",
      "to_entity": "Seq2SeqET",
      "relation_type": "Improve",
      "structure": "Architecture.Component",
      "detail": "T-RNN改进了Seq2SeqET，在数量编码、模板表示和树构造方面进行了提升。",
      "evidence": "T-RNN can be viewed as an improvement of Seq2SeqET, in terms of quantity encoding, template representation and tree construction.",
      "confidence": 0.95,
      "from_entity_type": "Algorithm",
      "to_entity_type": "Algorithm",
      "extraction_complete": true
    },
    {
      "from_entity": "Dolphin18K",
      "to_entity": "AI2",
      "relation_type": "Extend",
      "structure": "Evaluation.Dataset",
      "detail": "Dolphin18K扩展了AI2，包含更多的问题和模板，使其更具挑战性和多样性。",
      "evidence": "Dolphin18K which originally contains 18,460 problems and 5,871 templates with one or multiple equations. The findings in[12] are astonishing. The accuracies of existing approaches for equation set problems, which will be introduced in the next section, degrade sharply to less than 25%.",
      "confidence": 0.95,
      "from_entity_type": "Dataset",
      "to_entity_type": "Dataset",
      "extraction_complete": true
    },
    {
      "from_entity": "Math23K",
      "to_entity": "Dolphin18K",
      "relation_type": "Extend",
      "structure": "Evaluation.Dataset",
      "detail": "Math23K扩展了Dolphin18K，包含中文数学问题，使其适用于更广泛的场景。",
      "evidence": "Math23K is another large-scale dataset which contains Chinese math word problems.",
      "confidence": 0.95,
      "from_entity_type": "Dataset",
      "to_entity_type": "Dataset",
      "extraction_complete": true
    },
    {
      "from_entity": "FG-Expression",
      "to_entity": "Template-based methods",
      "relation_type": "Improve",
      "structure": "Architecture.Component",
      "detail": "FG-Expression改进了基于模板的方法，通过细粒度单元解析提高了映射准确性。",
      "evidence": "FG-Expression parses an equation template into fine-grained units, called template fragment. Each template is represented in a tree structure as in Figure 3 and each fragment represents a sub-tree rooted at an internal node.",
      "confidence": 0.95,
      "from_entity_type": "Algorithm",
      "to_entity_type": "Algorithm",
      "extraction_complete": true
    },
    {
      "from_entity": "UnitDep",
      "to_entity": "ExpressionTree",
      "relation_type": "Extend",
      "structure": "Architecture.Component",
      "detail": "UnitDep在ExpressionTree基础上引入了单位依赖图，增强了评分函数。",
      "evidence": "An important concept, named Unit Dependency Graph(UDG), is proposed to enhance the scoring function.",
      "confidence": 0.95,
      "from_entity_type": "Algorithm",
      "to_entity_type": "Algorithm",
      "extraction_complete": true
    },
    {
      "from_entity": "StackDecoder",
      "to_entity": "Seq2SeqET",
      "relation_type": "Optimize",
      "structure": "Architecture.Component",
      "detail": "StackDecoder优化了Seq2SeqET，通过堆栈机制提高了语义理解能力。",
      "evidence": "Its encoder extracts semantic meanings of quantities in the question text and the decoder is equipped with a stack to facilitate tracking the semantic meanings of operands.",
      "confidence": 0.95,
      "from_entity_type": "Algorithm",
      "to_entity_type": "Algorithm",
      "extraction_complete": true
    },
    {
      "from_entity": "MathDQN",
      "to_entity": "Dolphin18K",
      "relation_type": "Use",
      "structure": "Evaluation.Dataset",
      "detail": "MathDQN使用Dolphin18K数据集进行评估。",
      "evidence": "MathDQN achieves leading or comparable performance on Dolphin18K.",
      "confidence": 0.95,
      "from_entity_type": "Algorithm",
      "to_entity_type": "Dataset",
      "extraction_complete": true
    },
    {
      "from_entity": "DNS",
      "to_entity": "Math23K",
      "relation_type": "Use",
      "structure": "Evaluation.Dataset",
      "detail": "DNS使用Math23K数据集进行评估。",
      "evidence": "We implemented our own version of DNS and evaluated its performance on the large dataset.",
      "confidence": 0.95,
      "from_entity_type": "Algorithm",
      "to_entity_type": "Dataset",
      "extraction_complete": true
    },
    {
      "from_entity": "CASS",
      "to_entity": "Dolphin18K",
      "relation_type": "Use",
      "structure": "Evaluation.Dataset",
      "detail": "CASS使用Dolphin18K数据集进行评估。",
      "evidence": "CASS further improved the accuracy on Dolphin18K to 29%",
      "confidence": 0.95,
      "from_entity_type": "Algorithm",
      "to_entity_type": "Dataset",
      "extraction_complete": true
    }
  ],
  "completed": true
}