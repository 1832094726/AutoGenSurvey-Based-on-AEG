[
  {
    "from_entity": "Kushman2014_EquationSetSolver",
    "to_entity": "Huang2017_FineGrainedExpressions",
    "relation_type": "Improve",
    "structure": "Architecture.Mechanism",
    "detail": "引入细粒度单元以提高模板片段映射的准确性",
    "evidence": "通过将方程模板解析为细粒度单元，提高了文本信息与模板片段之间的映射精度。",
    "confidence": 0.95,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "ALG514_2014",
    "to_entity": "Dolphin18K_2016",
    "relation_type": "Extend",
    "structure": "",
    "detail": "扩展了数据集规模并增加了问题的多样性",
    "evidence": "Dolphin18K是目前最大的数学问题数据集，具有更高的多样性和挑战性。",
    "confidence": 0.9,
    "from_entity_type": "Dataset",
    "to_entity_type": "Dataset",
    "extraction_complete": true
  },
  {
    "from_entity": "OldMetric_2000",
    "to_entity": "Accuracy_Classification",
    "relation_type": "Improve",
    "structure": "",
    "detail": "改进了计算方式",
    "evidence": "通过更严格的实验设置和更大的数据集，提高了准确率的可靠性。",
    "confidence": 0.85,
    "from_entity_type": "Metric",
    "to_entity_type": "Metric",
    "extraction_complete": true
  },
  {
    "from_entity": "CASS2018_ReinforcementLearning",
    "to_entity": "T-RNN2019_TemplateBasedSolver",
    "relation_type": "Improve",
    "structure": "Architecture.Mechanism",
    "detail": "引入双向LSTM和自注意力机制以提高求解精度",
    "evidence": "通过引入双向LSTM和自注意力机制，进一步提高了求解精度。",
    "confidence": 0.95,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "OldDataset_2000",
    "to_entity": "ALG514_2014",
    "relation_type": "Extend",
    "structure": "",
    "detail": "扩展了数据集规模并增加了问题的多样性",
    "evidence": "ALG514是早期广泛使用的代数问题数据集，具有一定的多样性和挑战性。",
    "confidence": 0.9,
    "from_entity_type": "Dataset",
    "to_entity_type": "Dataset",
    "extraction_complete": true
  },
  {
    "from_entity": "ALG514_2014",
    "to_entity": "Dolphin1878_2015",
    "relation_type": "Extend",
    "structure": "",
    "detail": "扩展了数据集规模并增加了问题的多样性",
    "evidence": "Dolphin1878是ALG514的扩展版本，具有更高的多样性和挑战性。",
    "confidence": 0.9,
    "from_entity_type": "Dataset",
    "to_entity_type": "Dataset",
    "extraction_complete": true
  },
  {
    "from_entity": "Dolphin1878_2015",
    "to_entity": "DRAW1K_2016",
    "relation_type": "Extend",
    "structure": "",
    "detail": "扩展了数据集规模并增加了问题的多样性",
    "evidence": "DRAW1K是Dolphin1878的扩展版本，具有更高的多样性和挑战性。",
    "confidence": 0.9,
    "from_entity_type": "Dataset",
    "to_entity_type": "Dataset",
    "extraction_complete": true
  },
  {
    "from_entity": "TraditionalPairwiseModel",
    "to_entity": "Chang2013_L3M",
    "relation_type": "Improve",
    "structure": "Architecture.Mechanism",
    "detail": "引入了潜在变量模型和约束机制",
    "evidence": "Experiments on ACE and Ontonotes data show that L3M and its constrained version, CL3M, are more accurate than several state-of-the-art approaches.",
    "confidence": 0.95,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "TraditionalFeatureBasedParsers",
    "to_entity": "Chen2014_NeuralDependencyParser",
    "relation_type": "Improve",
    "structure": "Architecture.Mechanism",
    "detail": "使用神经网络分类器减少了特征计算成本并提高了解析速度",
    "evidence": "Experiments show that the neural network classifier achieves a 2% improvement in unlabeled and labeled attachment scores.",
    "confidence": 0.95,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "SingleFunctionCoreferenceModels",
    "to_entity": "Raghunathan2010_MultiPassSieve",
    "relation_type": "Improve",
    "structure": "Architecture.Mechanism",
    "detail": "通过多层筛选模型提高了精度",
    "evidence": "Our approach outperforms many state-of-the-art supervised and unsupervised models on several standard corpora.",
    "confidence": 0.95,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "TraditionalSentenceEmbeddings",
    "to_entity": "Lin2017_StructuredSelfAttentiveSentenceEmbedding",
    "relation_type": "Improve",
    "structure": "Architecture.Mechanism",
    "detail": "引入了自注意力机制和特殊正则化项",
    "evidence": "Results show that our model yields a significant performance gain compared to other sentence embedding methods in all of the 3 tasks.",
    "confidence": 0.95,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "TraditionalRuleBasedApproaches",
    "to_entity": "Roy2015_ARIS",
    "relation_type": "Improve",
    "structure": "Architecture.Mechanism",
    "detail": "通过动词分类提高了解题能力",
    "evidence": "ARIS learns to categorize verbs with 81.2% accuracy, and is able to solve 77.7% of the problems in a corpus of standard primary school test questions.",
    "confidence": 0.95,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "SmallScaleDatasets",
    "to_entity": "Huang2016_LargeScaleDatasetConstruction",
    "relation_type": "Extend",
    "structure": "Architecture.Mechanism",
    "detail": "构建了更大规模的数据集",
    "evidence": "We build a large-scale dataset which is more than 9 times the size of previous ones, and contains many more problem types.",
    "confidence": 0.95,
    "from_entity_type": "Dataset",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "TraditionalRuleBasedApproaches",
    "to_entity": "Roy2015_SolvingGeneralArithmeticProblems",
    "relation_type": "Improve",
    "structure": "Architecture.Mechanism",
    "detail": "通过表达树分解和约束推理框架提高了解题能力",
    "evidence": "Experimental results show that our method outperforms existing systems, achieving state-of-the-art performance on benchmark datasets of arithmetic word problems.",
    "confidence": 0.95,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "TraditionalStatisticalMethods",
    "to_entity": "Wang2017_DeepNeuralSolver",
    "relation_type": "Improve",
    "structure": "Architecture.Mechanism",
    "detail": "直接将数学应用题翻译为方程模板",
    "evidence": "Experiments conducted on a large dataset show that the RNN model and the hybrid model significantly outperform state-of-the-art statistical learning methods for math word problem solving.",
    "confidence": 0.95,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "TraditionalUnitExtraction",
    "to_entity": "Roy2018_UnitDependencyGraph",
    "relation_type": "Improve",
    "structure": "Architecture.Mechanism",
    "detail": "通过单位依赖图减少了错误",
    "evidence": "Introduction of UDGs reduces the error of the solver by over 10%, surpassing all existing systems for solving arithmetic word problems.",
    "confidence": 0.95,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "TraditionalSeq2Seq",
    "to_entity": "Huang2018_CASS",
    "relation_type": "Improve",
    "structure": "Architecture.Mechanism",
    "detail": "通过复制和对齐机制解决了生成虚假数字的问题",
    "evidence": "The copy and alignment mechanism is effective to address the two issues;",
    "confidence": 0.95,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "TraditionalGeometrySolvers",
    "to_entity": "Seo2015_GEOS",
    "relation_type": "Improve",
    "structure": "Architecture.Mechanism",
    "detail": "结合文本理解和图表解释",
    "evidence": "GEOS achieves a 49% score on official SAT questions, and a score of 61% on practice questions.",
    "confidence": 0.95,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "Hosseini2014_SimpleOperations",
    "to_entity": "Roy2015_SolvingGeneralArithmetic",
    "relation_type": "Extend",
    "structure": "Architecture.Component",
    "detail": "扩展了解析范围至更复杂的算术问题",
    "evidence": "能够处理更复杂的多步算术问题",
    "confidence": 0.9,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "Soon2001_PairwiseMentionModel",
    "to_entity": "Chang2013_ConstrainedLatentVariableModel",
    "relation_type": "Improve",
    "structure": "Architecture.Component",
    "detail": "引入约束以提高模型准确性",
    "evidence": "通过引入约束，显著提高了模型的准确性",
    "confidence": 0.95,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "Roy2015_SolvingGeneralArithmetic",
    "to_entity": "Roy2018_MappingDeclarativeKnowledge",
    "relation_type": "Improve",
    "structure": "Architecture.Component",
    "detail": "引入声明性知识映射以提高解题准确性",
    "evidence": "通过引入声明性知识映射，显著提高了求解器的性能",
    "confidence": 0.95,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "Kushman2014_EquationParser",
    "to_entity": "Chen2017_ProgramInduction",
    "relation_type": "Improve",
    "structure": "Architecture.Component",
    "detail": "引入理由生成以提高解题准确性",
    "evidence": "通过引入理由生成，显著提高了求解器的性能",
    "confidence": 0.95,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "Kushman2014_EquationParser",
    "to_entity": "Chiang2018_SemanticallyAlignedEquation",
    "relation_type": "Improve",
    "structure": "Architecture.Component",
    "detail": "引入语义对齐方程生成以提高解题准确性",
    "evidence": "通过引入语义对齐方程生成，显著提高了求解器的性能",
    "confidence": 0.95,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  }
]