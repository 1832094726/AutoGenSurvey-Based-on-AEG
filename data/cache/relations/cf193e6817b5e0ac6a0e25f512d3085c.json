[
  {
    "from_entity": "Wang2018_MathDQN",
    "to_entity": "Wang2017_DeepNeuralSolver",
    "relation_type": "Improve",
    "structure": "MathDQN改进了Deep Neural Solver",
    "detail": "MathDQN引入了强化学习机制，解决了Deep Neural Solver在生成表达式时可能出现的错误。",
    "evidence": "MathDQN采用了深度Q网络（Deep Q-Network），通过强化学习直接优化解题准确性，克服了Deep Neural Solver在大空间目标表达式中的性能下降问题（Wang et al., 2018）。",
    "confidence": 0.9,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "Roy2015_ARIS",
    "to_entity": "Roy2015_GeneralArithmetic",
    "relation_type": "Extend",
    "structure": "ARIS扩展为General Arithmetic Word Problem Solver",
    "detail": "ARIS通过动词分类来生成方程，而General Arithmetic Word Problem Solver进一步扩展了这一方法，能够处理更复杂的算术问题。",
    "evidence": "ARIS系统通过动词分类来生成方程，而General Arithmetic Word Problem Solver则通过表达树和约束推理框架来处理更复杂的算术问题（Roy & Roth, 2015）。",
    "confidence": 0.85,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "Roy2018_UnitDependencyGraph",
    "to_entity": "Roy2015_GeneralArithmetic",
    "relation_type": "Optimize",
    "structure": "Unit Dependency Graph优化了General Arithmetic Word Problem Solver",
    "detail": "Unit Dependency Graph通过引入单位依赖图减少了General Arithmetic Word Problem Solver的错误率。",
    "evidence": "Unit Dependency Graph通过引入单位依赖图（UDGs），减少了General Arithmetic Word Problem Solver的错误率超过10%，使其更加鲁棒（Roy & Roth, 2018）。",
    "confidence": 0.9,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "Wang2018_TemplateBased",
    "to_entity": "Wang2017_DeepNeuralSolver",
    "relation_type": "Extend",
    "structure": "Template-Based Math Word Problem Solver扩展了Deep Neural Solver",
    "detail": "Template-Based Math Word Problem Solver通过引入递归神经网络和模板表示，扩展了Deep Neural Solver的功能。",
    "evidence": "Template-Based Math Word Problem Solver通过递归神经网络和模板表示，扩展了Deep Neural Solver的功能，提高了表达式的生成能力（Wang et al., 2018）。",
    "confidence": 0.85,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "Wang2017_Translation",
    "to_entity": "Wang2017_DeepNeuralSolver",
    "relation_type": "Optimize",
    "structure": "Translation to Expression Tree优化了Deep Neural Solver",
    "detail": "Translation to Expression Tree通过规范化方程，优化了Deep Neural Solver的表达式生成过程。",
    "evidence": "Translation to Expression Tree通过规范化方程，优化了Deep Neural Solver的表达式生成过程，显著提高了模型的准确性（Wang et al., 2017）。",
    "confidence": 0.9,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "KoncelKedziorski2015_ALGES",
    "to_entity": "Roy2015_GeneralArithmetic",
    "relation_type": "Improve",
    "structure": "ALGES改进了General Arithmetic Word Problem Solver",
    "detail": "ALGES通过整数线性规划生成方程树，改进了General Arithmetic Word Problem Solver的解题能力。",
    "evidence": "ALGES通过整数线性规划生成方程树，改进了General Arithmetic Word Problem Solver的解题能力，特别是在多步算术问题上表现更好（Koncel-Kedziorski et al., 2015）。",
    "confidence": 0.85,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "Seo2015_GEOS",
    "to_entity": "Seo2013_DiagramUnderstanding",
    "relation_type": "Extend",
    "structure": "GEOS扩展了Diagram Understanding",
    "detail": "GEOS不仅理解文本，还结合了图表解释，扩展了Diagram Understanding的功能。",
    "evidence": "GEOS不仅理解文本，还结合了图表解释，扩展了Diagram Understanding的功能，能够处理几何问题（Seo et al., 2015）。",
    "confidence": 0.9,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "Chang2013_L3M",
    "to_entity": "Raghunathan2010_Sieve",
    "relation_type": "Improve",
    "structure": "L3M改进了Multi-Pass Sieve",
    "detail": "L3M通过引入潜在变量模型和基于知识的约束，改进了Multi-Pass Sieve的核心ference解析能力。",
    "evidence": "L3M通过引入潜在变量模型和基于知识的约束，改进了Multi-Pass Sieve的核心ference解析能力，提高了准确性和效率（Chang et al., 2013）。",
    "confidence": 0.85,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "Chen2014_NeuralParser",
    "to_entity": "Goldberg2010_EasyFirstParser",
    "relation_type": "Optimize",
    "structure": "Neural Dependency Parser优化了Easy-First Non-Directional Dependency Parsing",
    "detail": "Neural Dependency Parser通过使用神经网络分类器，优化了Easy-First Non-Directional Dependency Parsing的速度和准确性。",
    "evidence": "Neural Dependency Parser通过使用神经网络分类器，优化了Easy-First Non-Directional Dependency Parsing的速度和准确性，显著提高了无标签和有标签依存得分（Chen & Manning, 2014）。",
    "confidence": 0.9,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "Lin2017_StructuredSelfAttention",
    "to_entity": "Chen2014_NeuralParser",
    "relation_type": "Extend",
    "structure": "Structured Self-Attentive Sentence Embedding扩展了Neural Dependency Parser",
    "detail": "Structured Self-Attentive Sentence Embedding通过引入自注意力机制，扩展了Neural Dependency Parser的句子嵌入表示。",
    "evidence": "Structured Self-Attentive Sentence Embedding通过引入自注意力机制，扩展了Neural Dependency Parser的句子嵌入表示，提供了更丰富的语义信息（Lin et al., 2017）。",
    "confidence": 0.85,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "Antol2015_VQA",
    "to_entity": "Goyal2017_VQA",
    "relation_type": "Improve",
    "structure": "VQA改进了Visual Question Answering",
    "detail": "VQA通过引入更平衡的数据集，改进了Visual Question Answering的视觉理解能力。",
    "evidence": "VQA通过引入更平衡的数据集，改进了Visual Question Answering的视觉理解能力，使得模型在测试集上的表现更好（Goyal et al., 2017）。",
    "confidence": 0.9,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "Wang2018_StackDecoder",
    "to_entity": "Wang2017_DeepNeuralSolver",
    "relation_type": "Extend",
    "structure": "StackDecoder扩展了Deep Neural Solver",
    "detail": "StackDecoder通过引入堆栈机制，扩展了Deep Neural Solver的功能，增强了语义跟踪能力。",
    "evidence": "StackDecoder通过引入堆栈机制，扩展了Deep Neural Solver的功能，增强了语义跟踪能力，提高了算术问题的求解精度（Wang et al., 2019）。",
    "confidence": 0.85,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "Wang2018_T-RNN",
    "to_entity": "Wang2017_DeepNeuralSolver",
    "relation_type": "Extend",
    "structure": "T-RNN扩展了Deep Neural Solver",
    "detail": "T-RNN通过引入双向LSTM和自注意力机制，扩展了Deep Neural Solver的功能，提高了表达式的生成能力。",
    "evidence": "T-RNN通过引入双向LSTM和自注意力机制，扩展了Deep Neural Solver的功能，提高了表达式的生成能力，特别是在Math23K数据集上表现优异（Wang et al., 2019）。",
    "confidence": 0.9,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "Roy2015_ARIS",
    "to_entity": "Mitra2016_FormulaSolver",
    "relation_type": "Improve",
    "structure": "ARIS改进了Formula Solver",
    "detail": "ARIS通过动词分类和方程生成，改进了Formula Solver的解题能力。",
    "evidence": "ARIS通过动词分类和方程生成，改进了Formula Solver的解题能力，特别是在标准小学测试问题上表现更好（Hosseini et al., 2015；Mitra & Baral, 2016）。",
    "confidence": 0.85,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "Roy2018_UnitDependencyGraph",
    "to_entity": "Roy2015_ARIS",
    "relation_type": "Optimize",
    "structure": "Unit Dependency Graph优化了ARIS",
    "detail": "Unit Dependency Graph通过引入单位依赖图，优化了ARIS的解题过程。",
    "evidence": "Unit Dependency Graph通过引入单位依赖图，优化了ARIS的解题过程，减少了错误率（Roy & Roth, 2018）。",
    "confidence": 0.9,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  },
  {
    "from_entity": "Wang2018_TemplateBased",
    "to_entity": "Wang2017_Translation",
    "relation_type": "Extend",
    "structure": "Template-Based Math Word Problem Solver扩展了Translation to Expression Tree",
    "detail": "Template-Based Math Word Problem Solver通过引入递归神经网络和模板表示，扩展了Translation to Expression Tree的功能。",
    "evidence": "Template-Based Math Word Problem Solver通过引入递归神经网络和模板表示，扩展了Translation to Expression Tree的功能，提高了表达式的生成能力（Wang et al., 2018）。",
    "confidence": 0.85,
    "from_entity_type": "Algorithm",
    "to_entity_type": "Algorithm",
    "extraction_complete": true
  }
]